{"version":3,"sources":["../src/constants.ts","../src/clipboard.ts","../src/renderList.ts","../src/renderMarkdown.ts","../src/index.ts"],"names":["EventType"],"mappings":";AAAO,IAAK,YAAL,kBAAKA,eAAL;AACL,EAAAA,WAAA,gBAAa;AACb,EAAAA,WAAA,oBAAiB;AAFP,SAAAA;AAAA,GAAA;;;ACAL,IAAM,YAAY;AAAA,EACvB,MAAM,UAAU,MAAc;AAAA,EAG9B;AACF;;;ACFO,SAAS,WAAW,OAAmB;AAC5C,cAAY;AAAA,IACV;AAAA,IACA;AAAA,EACF,CAAC;AACH;;;ACNO,SAAS,eAAe,MAAc;AAC3C,cAAY;AAAA,IACV;AAAA,IACA,SAAS;AAAA,EACX,CAAC;AACH;;;ACCO,IAAM,QAAQ","sourcesContent":["export enum EventType {\n  RenderList = 'RenderList',\n  RenderMarkdown = 'RenderMarkdown',\n}\n","export const clipboard = {\n  async writeText(text: string) {\n    //\n    //\n  },\n}\n","import { EventType } from './constants'\nimport { ListItem } from './types'\n\nexport function renderList(items: ListItem[]) {\n  postMessage({\n    type: EventType.RenderList,\n    items,\n  })\n}\n","import { EventType } from './constants'\n\nexport function renderMarkdown(text: string) {\n  postMessage({\n    type: EventType.RenderMarkdown,\n    content: text,\n  })\n}\n","export * from './constants'\nexport * from './types'\nexport * from './clipboard'\n\nexport * from './renderList'\nexport * from './renderMarkdown'\n\n// export const input = (self as any)?.input\nexport const input = 'TODO'\n"]}